Haxe File
  PACKAGE_STATEMENT
    PsiJavaToken:package('package')
    PsiJavaToken:;(';')
  IMPORT_STATEMENT_REGULAR
    PsiJavaToken:import('import')
    REFERENCE_EXPRESSION
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('haxe')
      PsiJavaToken:.('.')
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Timer')
    PsiJavaToken:;(';')
  PsiComment(MSL_COMMENT)('// This tests http:github.com/haxefoundation/intellij-haxe/issues/544')
  PsiComment(MSL_COMMENT)('// which was the inability to parse a function call immediately after an anonymous')
  PsiComment(MSL_COMMENT)('// function was defined.')
  CLASS_DECLARATION
    PsiJavaToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('TestIssue544')
    PsiJavaToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiJavaToken:public('public')
        PsiJavaToken:function('function')
        PsiJavaToken:new('new')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          PsiComment(MSL_COMMENT)('// Error markers used to appear here ------------------------------------------------+')
          PsiComment(MSL_COMMENT)('//                          and here ---------------------------------------------+  |')
          PsiComment(MSL_COMMENT)('//                                                                                v  v')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('a')
              VAR_INIT
                PsiJavaToken:=('=')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('Timer')
                    PsiJavaToken:.('.')
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('delay')
                  PsiJavaToken:(('(')
                  EXPRESSION_LIST
                    CALL_EXPRESSION
                      FUNCTION_LITERAL
                        PsiJavaToken:function('function')
                        PsiJavaToken:(('(')
                        PARAMETER_LIST
                          PARAMETER
                            COMPONENT_NAME
                              IDENTIFIER
                                PsiJavaToken:ID('c')
                        PsiJavaToken:)(')')
                        BLOCK_STATEMENT
                          PsiJavaToken:{('{')
                          RETURN_STATEMENT
                            PsiJavaToken:return('return')
                            PARENTHESIZED_EXPRESSION
                              PsiJavaToken:(('(')
                              FUNCTION_LITERAL
                                PsiJavaToken:function('function')
                                PsiJavaToken:(('(')
                                PARAMETER_LIST
                                  <empty list>
                                PsiJavaToken:)(')')
                                BLOCK_STATEMENT
                                  PsiJavaToken:{('{')
                                  CALL_EXPRESSION
                                    REFERENCE_EXPRESSION
                                      IDENTIFIER
                                        PsiJavaToken:ID('trace')
                                    PsiJavaToken:(('(')
                                    EXPRESSION_LIST
                                      STRING_LITERAL_EXPRESSION
                                        PsiJavaToken:OPEN_QUOTE('"')
                                        PsiJavaToken:REGULAR_STRING_PART('Haxe is great!')
                                        PsiJavaToken:CLOSING_QUOTE('"')
                                      PsiJavaToken:,(',')
                                      REFERENCE_EXPRESSION
                                        IDENTIFIER
                                          PsiJavaToken:ID('c')
                                    PsiJavaToken:)(')')
                                  PsiJavaToken:;(';')
                                  PsiJavaToken:}('}')
                              PsiJavaToken:)(')')
                            PsiJavaToken:;(';')
                          PsiJavaToken:}('}')
                      PsiJavaToken:(('(')
                      EXPRESSION_LIST
                        LITERAL_EXPRESSION
                          PsiJavaToken:LITINT('3')
                      PsiJavaToken:)(')')
                    PsiJavaToken:,(',')
                    LITERAL_EXPRESSION
                      PsiJavaToken:LITINT('1000')
                  PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// This should parse cleanly and not be in a dummy block.')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('v')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('Array')
                    TYPE_PARAM
                      PsiJavaToken:<('<')
                      TYPE_LIST
                        TYPE_LIST_PART
                          TYPE_OR_ANONYMOUS
                            TYPE
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('String')
                      PsiJavaToken:>('>')
              VAR_INIT
                PsiJavaToken:=('=')
                OBJECT_LITERAL
                  PsiJavaToken:{('{')
                  PsiJavaToken:}('}')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')